-- üîß –ù–ê–°–¢–†–û–ô–ö–ò
getgenv().protected_stands = getgenv().protected_stands or {
    "gold", "wonder", "tusk", "d4", "mandom"
}

getgenv().if_send_webhook = {
    "gold", "wonder", "tusk", "d4c", "cream", "starplatinum",
    "theworld", "whitesnake", "kingcrimson", "killerqueen", "mandom",
}

getgenv().webhook_url_autostand = getgenv().webhook_url_autostand or "–í–ê–®_–í–ï–ë–•–£–ö_–ó–î–ï–°–¨"
getgenv().enable_webhook = getgenv().enable_webhook ~= false
getgenv().autoResetAfterObtain = true
getgenv().autoBuyItems = true
getgenv().buyInterval = 0.3

-- üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: –∑–∞—â–∏—â—ë–Ω –ª–∏ —Å—Ç–µ–Ω–¥
local function isProtectedStand(standName)
    if not standName or standName == "None" then return false end
    local lower = string.lower(standName)
    for _, protected in ipairs(getgenv().protected_stands) do
        if string.find(lower, protected) then
            return true
        end
    end
    return false
end

-- üß© –°–µ—Ä–≤–∏—Å—ã
local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

-- üîå Remotes
local fruitevent = ReplicatedStorage.Logic:WaitForChild("fruitevent")
local luckyarrowevent = ReplicatedStorage.Logic:WaitForChild("luckyarrowevent")
local giveitem = ReplicatedStorage.Logic:WaitForChild("giveitem")

-- üßç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–∏–∑–Ω–∏
local function isAlive(character)
    return character and character.Parent ~= nil 
        and character:FindFirstChild("Humanoid") 
        and character.Humanoid.Health > 0
end

-- üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏
local function getLatestRefs()
    local character = player.Character
    if not character or not isAlive(character) then
        return nil, nil, nil
    end
    local backpack = player:FindFirstChild("Backpack")
    local stand = player:FindFirstChild("Stand")
    return character, backpack, stand
end

-- üîç –ù–∞–π—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
local function findTool(name)
    local character, backpack = getLatestRefs()
    if not character or not backpack then return nil end
    return character:FindFirstChild(name) or backpack:FindFirstChild(name)
end

-- üß∑ –ù–∞–¥–µ—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
local function equipTool(tool)
    if not tool then return end
    local character = player.Character
    if tool.Parent ~= character and character and isAlive(character) then
        pcall(function() tool.Parent = character end)
    end
end

-- üåê –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
local function sendWebhook(standName)
    if not getgenv().enable_webhook or not getgenv().autoResetAfterObtain then return end
    if not getgenv().webhook_url_autostand or not string.find(getgenv().webhook_url_autostand, "webhooks") then
        return
    end

    local lowerStand = string.lower(standName)
    local shouldSend = false
    for _, name in ipairs(getgenv().if_send_webhook) do
        if string.find(lowerStand, string.lower(name)) then
            shouldSend = true
            break
        end
    end
    if not shouldSend then return end

    local httpRequest = http_request or (syn and syn.request) or request
    if not httpRequest then return end

    local embed = {
        title = "üî• Project JOJO",
        description = "**" .. player.Name .. "** –ø–æ–ª—É—á–∏–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å!",
        fields = {{
            name = "üéØ –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å—Ç–µ–Ω–¥",
            value = "```" .. standName .. "```",
            inline = false
        }},
        color = 5814783,
        timestamp = os.date("!%Y-%m-%dT%H:%M:%S.000Z"),
        footer = { text = "Fast Auto-Reset System" },
        author = {
            name = "–ò–≥—Ä–æ–∫: " .. player.Name,
            icon_url = "https://www.roblox.com/headshot-thumbnail/image?userId="..player.UserId.."&width=420&height=420&format=png"
        }
    }

    local data = { embeds = { embed } }
    local body = HttpService:JSONEncode(data)

    pcall(function()
        httpRequest({
            Url = getgenv().webhook_url_autostand,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = body
        })
    end)
end

-- üîÅ –§–ª–∞–≥–∏
local isUsingArrow = false
local hasProcessedNewStand = false
local lastLoggedStand = nil  -- –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å

-- üìù –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å—Ç–µ–Ω–¥–∞
local function logObtainedStand(standName)
    if not standName or standName == "None" or standName == "Human" then return end
    if lastLoggedStand == standName then return end  -- –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π

    lastLoggedStand = standName
    local status = isProtectedStand(standName) and "üõ°Ô∏è –ó–ê–©–ò–©–Å–ù–ù–´–ô" or "üéâ –ù–û–í–´–ô"
    print(("[–õ–û–ì] %s: %s"):format(status, standName))

    -- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
    sendWebhook(standName)
end

-- üèπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Lucky Arrow
local function useLuckyArrow()
    if isUsingArrow then return end
    isUsingArrow = true

    local character, _, stand = getLatestRefs()
    if not character or not stand or not isAlive(character) then
        isUsingArrow = false
        return
    end

    if stand.Value ~= "None" then
        isUsingArrow = false
        return
    end

    local arrow = findTool("LuckyStandArrow")
    if not arrow then
        isUsingArrow = false
        return
    end

    equipTool(arrow)
    if arrow.Parent ~= character then
        isUsingArrow = false
        return
    end

    print("[–°—Ç—Ä–µ–ª–∞] üèπ –ò—Å–ø–æ–ª—å–∑—É–µ–º Lucky Stand Arrow...")
    pcall(function()
        luckyarrowevent:InvokeServer(arrow, character, 0)
    end)

    -- üî• –°–†–ê–ó–£ –ø–æ—Å–ª–µ —Å—Ç—Ä–µ–ª—ã ‚Äî –ø—Ä–æ–±—É–µ–º —Å–±—Ä–æ—Å–∏—Ç—å (–≤ –æ–∫–Ω–µ –¥–æ —Ä–µ—Å–µ—Ç–∞!)
    task.spawn(function()
        task.wait(0.1)
        local rokakaka = findTool("RokakakaFruit")
        if not rokakaka then return end

        local _, _, stand = getLatestRefs()
        if not stand or isProtectedStand(stand.Value) then
            return  -- ‚ùå –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ —Å—Ç–µ–Ω–¥ –∑–∞—â–∏—â—ë–Ω!
        end

        equipTool(rokakaka)
        local char = player.Character
        if rokakaka.Parent == char and char and isAlive(char) then
            print("‚ö° [FAST RESET] –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–µ–Ω–¥: " .. (stand.Value or "Unknown"))
            pcall(function()
                fruitevent:InvokeServer(rokakaka, char, 2)
            end)
        end
    end)

    isUsingArrow = false
end

-- üîÅ –°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–µ–Ω–¥ (–µ—Å–ª–∏ –µ—Å—Ç—å –∏ –Ω–µ –∑–∞—â–∏—â—ë–Ω)
local function tryResetCurrentStand()
    local character, _, stand = getLatestRefs()
    if not character or not stand or not isAlive(character) then return end

    if isProtectedStand(stand.Value) then
        print("[–°–±—Ä–æ—Å] ‚õî –ó–∞—â–∏—â—ë–Ω–Ω—ã–π —Å—Ç–µ–Ω–¥: " .. stand.Value)
        return
    end

    if stand.Value == "None" then return end

    local rokakaka = findTool("RokakakaFruit")
    if not rokakaka then return end

    equipTool(rokakaka)
    if rokakaka.Parent ~= character then return end

    print("‚ö° [–°–±—Ä–æ—Å] –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–µ–Ω–¥: " .. stand.Value)
    pcall(function()
        fruitevent:InvokeServer(rokakaka, character, 2)
    end)
end

-- üîÅ –¶–ò–ö–õ: –ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π Backpack)
task.spawn(function()
    while true do
        task.wait(getgenv().buyInterval)
        if not getgenv().autoBuyItems then continue end

        local character = player.Character
        local backpack = player:FindFirstChild("Backpack")
        if not character or not backpack or not isAlive(character) then
            continue  -- üî¥ –ñ–¥—ë–º, –ø–æ–∫–∞ –±—É–¥–µ—Ç Character –∏ Backpack
        end

        for _, item in ipairs({ "RokakakaFruit", "LuckyStandArrow" }) do
            if not findTool(item) then  -- findTool –ø—Ä–æ–≤–µ—Ä—è–µ—Ç Character –∏ Backpack
                pcall(function()
                    giveitem:FireServer(item)
                end)
                task.wait(0.05)  -- ‚ùó –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–∫—É–ø–∫–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –æ—á–µ—Ä–µ–¥—å
            end
        end
    end
end)

-- üÜï –ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function()
    task.wait(0.3)
    isUsingArrow = false
    hasProcessedNewStand = false
    lastLoggedStand = nil  -- –°–±—Ä–æ—Å –ª–æ–≥–∞ –ø—Ä–∏ —Ä–µ—Å–ø–µ

    -- –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Å—Ç–µ–Ω–¥ ‚Äî —Å–±—Ä–æ—Å–∏–º
    local _, _, stand = getLatestRefs()
    if stand and stand.Value ~= "None" and not isProtectedStand(stand.Value) then
        print("[–†–µ—Å–ø] üîÑ –ï—Å—Ç—å —Å—Ç–µ–Ω–¥: " .. stand.Value .. " ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º...")
        tryResetCurrentStand()
    end
end)

-- üîî –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è Stand.Value
player.Stand.Changed:Connect(function(newStand)
    task.spawn(function()
        task.wait(0.1) -- –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        local _, _, stand = getLatestRefs()
        if not stand then return end

        -- –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–µ–Ω–¥ –∏ –Ω–µ "None"
        if stand.Value ~= "None" and stand.Value ~= "Human" and stand.Value ~= lastLoggedStand then
            logObtainedStand(stand.Value)
        end
    end)
end)

-- üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
task.spawn(function()
    task.wait(1)
    local stand = player:FindFirstChild("Stand")
    if stand and stand.Value ~= "None" and not isProtectedStand(stand.Value) then
        print("[–°—Ç–∞—Ä—Ç] üîÑ –£–∂–µ –µ—Å—Ç—å —Å—Ç–µ–Ω–¥: " .. stand.Value .. " ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º...")
        tryResetCurrentStand()
    end

    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while true do
        task.wait(1)
        if getgenv().autoResetAfterObtain and player.Stand.Value == "None" then
            useLuckyArrow()
        end
    end
end)

print("[–°–∫—Ä–∏–ø—Ç] ‚úÖ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å + –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–ï —Å—Ç–µ–Ω–¥–æ–≤ –∞–∫—Ç–∏–≤–µ–Ω.")
print("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: getgenv().autoBuyItems = true/false | autoResetAfterObtain = true/false")