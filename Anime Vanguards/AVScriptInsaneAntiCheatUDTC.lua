-- üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if not getgenv then
    return warn("–°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å—Ä–µ–¥–µ —Å getgenv (Synapse X, Krnl)")
end
if not getgenv().AVKaitun then return end

-- ‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
getgenv().days_amount = 3
getgenv().AutoUpgradeEnabled = true
getgenv().MatchRestartEnabled = true

-- üåê Discord Webhook URL (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)

-- üìç –ù–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ —é–Ω–∏—Ç–æ–≤
local TARGET_POSITIONS = {
    Vector3.new(424.83978271484375, 3.7291393280029297, -350.6957702636719),
    Vector3.new(424.9408874511719, 3.7291393280029297, -353.44927978515625),
    Vector3.new(430.9632873535156, 3.7291393280029297, -351.3844299316406),
    Vector3.new(430.8381042480469, 3.7291393280029297, -354.10968017578125),
    Vector3.new(425.84222412109375, 3.7291393280029297, -347.7817687988281),
    Vector3.new(428.85882568359375, 3.7291393280029297, -346.37255859375)
}

-- ‚è≥ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
local function randomDelay(min, max)
    local delay = math.random(min * 100, max * 100) / 100
    task.wait(delay)
    return delay
end

-- üß† –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê
local function main()
    local placeId = game.PlaceId
    local player = game:GetService("Players").LocalPlayer

    -- ‚úÖ –ê–Ω—Ç–∏-–∞—Ñ–∫ (—á–µ—Ä–µ–∑ VirtualUser)
    local function enableAntiIdle()
        local vu = game:GetService("VirtualUser")
        player.Idled:Connect(function()
            vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            task.wait(1)
            vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        end)
    end
    enableAntiIdle()

    if placeId == 16146832113 then
        -- üåû –†–ï–ñ–ò–ú: –ú–µ–Ω—é (–¥–µ–π–ª–∏–∫–∏, –±–∞—Ç–ª–ø–∞—Å—Å, –∫–≤–µ—Å—Ç—ã, –∑–∞–ø—É—Å–∫ –º–∞—Ç—á–∞)
        print("üéÆ [–ú–µ–Ω—é] –ó–∞–ø—É—Å–∫ —Ä—É—Ç–∏–Ω—ã...")

        if not game:IsLoaded() then game.Loaded:Wait() end
        repeat task.wait() until player:FindFirstChild("PlayerGui")
        repeat task.wait() until player.PlayerGui:FindFirstChild("Windows")

        -- 1. –í—ã–±–æ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —é–Ω–∏—Ç–∞
        pcall(function()
            local networking = game.ReplicatedStorage:WaitForChild("Networking", 10)
            local selectionEvent = networking:WaitForChild("Units"):WaitForChild("UnitSelectionEvent", 5)
            selectionEvent:FireServer("Select", "Luffo")
            print("‚úÖ –Æ–Ω–∏—Ç Luffo –≤—ã–±—Ä–∞–Ω")
            randomDelay(0.3, 0.7)
        end)

        -- 2. –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —é–Ω–∏—Ç–∞
        pcall(function()
            local unitsFrame = player.PlayerGui.Windows.Units.Holder.Main.Units
            for _, frame in pairs(unitsFrame:GetChildren()) do
                if frame:IsA("Frame") and frame.Name ~= "BuyMoreSpace" then
                    local equipEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("Units"):WaitForChild("EquipEvent", 5)
                    equipEvent:FireServer("Equip", frame.Name)
                    print(`‚úÖ –≠–∫–∏–ø–∏—Ä–æ–≤–∞–Ω: {frame.Name}`)
                    break
                end
                randomDelay(0.1, 0.3)
            end
        end)

        -- 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–π–ª–∏–∫–æ–≤
        pcall(function()
            local rewardEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("DailyRewardEvent", 5)
            if rewardEvent then
                for _, season in pairs({"Summer", "Spring", "Special"}) do
                    for day = 1, getgenv().days_amount do
                        rewardEvent:FireServer("Claim", {season, day})
                        print(`üéÅ –ü–æ–ª—É—á–µ–Ω–æ: {season} ‚Äî –î–µ–Ω—å {day}`)
                        randomDelay(0.2, 0.4)
                    end
                end
            end
        end)

        -- 4. –ë–∞—Ç–ª–ø–∞—Å—Å
        pcall(function()
            local bpEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("BattlepassEvent", 5)
            if bpEvent then
                bpEvent:FireServer("ClaimAll")
                print("üéñÔ∏è –í—Å–µ –Ω–∞–≥—Ä–∞–¥—ã Battlepass –ø–æ–ª—É—á–µ–Ω—ã")
                randomDelay(0.5, 1.2)
            end
        end)

        -- 5. –ö–≤–µ—Å—Ç—ã
        pcall(function()
            local questEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("Quests"):WaitForChild("ClaimQuest", 5)
            if questEvent then
                questEvent:FireServer("ClaimAll")
                print("üìú –í—Å–µ –∫–≤–µ—Å—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã")
                randomDelay(0.5, 1.0)
            else
                warn("‚ùå ClaimQuest –Ω–µ –Ω–∞–π–¥–µ–Ω")
            end
        end)

        -- 6. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –º–∞—Ç—á–∞
        pcall(function()
            local lobbyEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("LobbyEvent", 5)
            if lobbyEvent then
                lobbyEvent:FireServer("AddMatch", {
                    Difficulty = "Normal",
                    Act = "Act1",
                    StageType = "Story",
                    Stage = "Stage1",
                    FriendsOnly = true
                })
                print("üéÆ –ú–∞—Ç—á –¥–æ–±–∞–≤–ª–µ–Ω: Act1, Normal")
                randomDelay(0.3, 0.7)

                lobbyEvent:FireServer("StartMatch")
                print("üöÄ –ú–∞—Ç—á –∑–∞–ø—É—â–µ–Ω!")
            end
        end)

        print("‚úÖ –ú–µ–Ω—é-—Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à—ë–Ω. –û–∂–∏–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ –±–æ—ë–≤–∫—É...")

    elseif placeId == 16277809958 then
        -- üî• –†–ï–ñ–ò–ú: –ë–æ—ë–≤–∫–∞ (–∞–≤—Ç–æ–ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ)
        print("üéÆ [–ë–æ—ë–≤–∫–∞] –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-–ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è...")

        if not game:IsLoaded() then game.Loaded:Wait() end
        repeat task.wait() until player.Character
        repeat task.wait() until player.Character:FindFirstChild("HumanoidRootPart")

        -- üßπ –û—á–∏—Å—Ç–∫–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è FPS
        pcall(function()
            local map = game.Workspace:FindFirstChild("Map")
            if map then
                for _, v in pairs(map:GetChildren()) do
                    if v.Name ~= "Assets" and v.Name ~= "Terrain" then
                        pcall(v.Destroy, v)
                    end
                end
                print("üßπ –û—á–∏—â–µ–Ω Map (–æ—Å—Ç–∞–≤–ª–µ–Ω—ã Assets –∏ Terrain)")
            end
        end)

        task.wait(0.5)

        -- ‚è≠Ô∏è –§—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ª–Ω—É
        local function fireSkipWaveEvent()
            pcall(function()
                local skipEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("SkipWaveEvent", 5)
                if skipEvent then
                    skipEvent:FireServer("Skip")
                    print("‚è≠Ô∏è SkipWaveEvent –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚Äî –≤–æ–ª–Ω–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")
                else
                    warn("‚ùå SkipWaveEvent –Ω–µ –Ω–∞–π–¥–µ–Ω")
                end
            end)
        end

        -- üß© –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∏–≥—Ä–∞
        local function isGameActive()
            local hotbar = player.PlayerGui:FindFirstChild("Hotbar")
            local endScreen = player.PlayerGui:FindFirstChild("EndScreen")
            return hotbar and hotbar.Enabled == true and (not endScreen or not endScreen.Enabled)
        end

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–¥—ë—Ç –ª–∏ –≤–æ–ª–Ω–∞
        local function isWaveActive()
            local wave = game.Workspace:FindFirstChild("WaveController")
            return wave and wave:FindFirstChild("CurrentWave") and wave.CurrentWave.Value > 0
        end

        -- –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –≤–æ–ª–Ω—ã
        local function waitForWaveStart()
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –Ω–∞—á–∞–ª–æ –≤–æ–ª–Ω—ã...")
            while getgenv().MatchRestartEnabled do
                if isGameActive() and isWaveActive() then
                    print("üî• –í–æ–ª–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å!")
                    break
                end
                task.wait(1)
            end
        end

        -- üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–≥
        local function getPlayerMoney()
            local yenFrame = player.PlayerGui:FindFirstChild("Hotbar")
            if not yenFrame then return 0 end

            local text = yenFrame.Main.Yen.Text
            if not text or text:lower():find("inf") then return math.huge end

            local cleanText = string.gsub(text, "%D", "")
            local money = tonumber(cleanText) or 0
            return money
        end

        -- üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —é–Ω–∏—Ç–æ–≤
        local function getUnitCount()
            local units = game.Workspace:FindFirstChild("Units")
            if not units then return 0 end
            return #units:GetChildren()
        end

        -- ‚úÖ –¢–û–ß–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞: —Å—Ç–æ–∏—Ç –ª–∏ —é–Ω–∏—Ç –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏
        local function isUnitAtExactPosition(position, tolerance)
            local units = game.Workspace:FindFirstChild("Units")
            if not units then return false end

            for _, unit in pairs(units:GetChildren()) do
                local hrp = unit:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local dist = (hrp.Position - position).Magnitude
                    if dist <= tolerance then
                        return true, unit
                    end
                end
            end
            return false, nil
        end

        -- üö∂‚Äç‚ôÇÔ∏è –î–≤–∏–∂–µ–Ω–∏–µ –∫ –ø–æ–∑–∏—Ü–∏–∏
        local function moveToPosition(targetPosition)
            local char = player.Character
            if not char then return end

            local humanoid = char:FindFirstChild("Humanoid")
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not humanoid or not hrp then return end

            local offset = Vector3.new(
                math.random(-15, 15) / 10,
                0,
                math.random(-15, 15) / 10
            )
            local finalPos = targetPosition + offset

            humanoid:MoveTo(finalPos)

            local startTime = tick()
            repeat task.wait(0.1) until
                (hrp.Position - finalPos).Magnitude < 5 or
                tick() - startTime > 3
        end

        -- üõ†Ô∏è –†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–¥–Ω–æ–≥–æ —é–Ω–∏—Ç–∞ —Å –º–∞–ª—ã–º –æ—Ñ—Ñ—Å–µ—Ç–æ–º
        local function deployUnit(pos, index)
            local unitEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("UnitEvent", 5)
            if not unitEvent then return false end

            local playerMoney = getPlayerMoney()
            if playerMoney < 300 then
                print(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —é–Ω–∏—Ç–∞ {index} (–Ω—É–∂–Ω–æ: 300, –µ—Å—Ç—å: {playerMoney})`)
                return false
            end

            local occupied, unitAtPos = isUnitAtExactPosition(pos, 1.8)
            if occupied then
                print(`üìç –ü–æ–∑–∏—Ü–∏—è {index} –∑–∞–Ω—è—Ç–∞: {unitAtPos.Name}`)
                return true
            end

            local offsetRange = math.random(3, 10) / 1000
            local offsetX = offsetRange * (math.random(0, 1) * 2 - 1)
            local offsetZ = offsetRange * (math.random(0, 1) * 2 - 1)
            local offsetPos = pos + Vector3.new(offsetX, 0, offsetZ)

            pcall(function()
                unitEvent:FireServer("Render", {"Luffo", 39, offsetPos, 0})
                print(`üöö [1] –û—Ñ—Ñ—Å–µ—Ç: {string.format("%.4f, %.4f", offsetPos.X, offsetPos.Z)}`)
                task.wait(0.6)
            end)

            if isUnitAtExactPosition(offsetPos, 2.0) then
                print(`‚úÖ –Æ–Ω–∏—Ç {index} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω (–æ—Ñ—Ñ—Å–µ—Ç)`)
                moveToPosition(offsetPos)
                task.wait(0.5)
                return true
            end

            print(`üîÅ [2] –¢–æ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è`)
            pcall(function()
                unitEvent:FireServer("Render", {"Luffo", 39, pos, 0})
                task.wait(0.6)
            end)

            if isUnitAtExactPosition(pos, 2.0) then
                print(`‚úÖ –Æ–Ω–∏—Ç {index} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω (—Ç–æ—á–Ω–æ)`)
                moveToPosition(pos)
                task.wait(0.5)
                return true
            end

            local flippedPos = pos - Vector3.new(offsetX, 0, offsetZ)
            print(`üîÑ [3] –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ñ—Ñ—Å–µ—Ç: {string.format("%.4f, %.4f", flippedPos.X, flippedPos.Z)}`)
            pcall(function()
                unitEvent:FireServer("Render", {"Luffo", 39, flippedPos, 0})
                task.wait(0.6)
            end)

            if isUnitAtExactPosition(flippedPos, 2.0) then
                print(`‚úÖ –Æ–Ω–∏—Ç {index} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω (–æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ñ—Ñ—Å–µ—Ç)`)
                moveToPosition(flippedPos)
                task.wait(0.5)
                return true
            end

            warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å —é–Ω–∏—Ç {index} –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫`)
            return false
        end

        -- üöÄ –†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —é–Ω–∏—Ç–æ–≤
        local function deployAllUnits()
            print("üì¶ –†–∞–∑–º–µ—â–∞–µ–º —é–Ω–∏—Ç–æ–≤...")
            unitLevels = {} -- üîÅ –°–±—Ä–æ—Å —É—Ä–æ–≤–Ω–µ–π
            randomDelay(1, 2)

            local unitCount = getUnitCount()
            if unitCount >= 6 then
                print("üõë –£–∂–µ 6 —é–Ω–∏—Ç–æ–≤ ‚Äî –±–æ–ª—å—à–µ –Ω–µ —Å—Ç–∞–≤–∏–º")
                return
            end

            while getPlayerMoney() < 300 do
                print(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 300¬• –¥–ª—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏... (–µ—Å—Ç—å: {getPlayerMoney()})`)
                task.wait(2)
            end

            for i, pos in ipairs(TARGET_POSITIONS) do
                local success = deployUnit(pos, i)
                if success then
                    randomDelay(0.8, 1.5)
                else
                    print(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å —é–Ω–∏—Ç {i}`)
                    randomDelay(1.5, 2.0)
                end
            end

            print("‚úÖ –í—Å–µ —é–Ω–∏—Ç—ã —Ä–∞–∑–º–µ—â–µ–Ω—ã –∏–ª–∏ –ø–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        end

        -- üß† –•—Ä–∞–Ω–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —é–Ω–∏—Ç–æ–≤
        local unitLevels = {}
        local MAX_LEVEL = 5

        -- üîß –ê–ø–≥—Ä–µ–π–¥: —á–µ—Ä–µ–∑ RemoteEvent
        local function upgradeCheapestUnit()
            if not getgenv().AutoUpgradeEnabled then return end

            local unitCount = getUnitCount()
            if unitCount == 0 or unitCount < 6 then
                print(`üü° –Æ–Ω–∏—Ç–æ–≤: {unitCount}/6 ‚Äî —Å—Ç–∞–≤–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö...`)
                deployAllUnits()
                return
            end

            local currentMoney = getPlayerMoney()
            local units = game.Workspace:FindFirstChild("Units")
            if not units then return end

            local upgradableUnits = {}
            for _, unit in pairs(units:GetChildren()) do
                if not unit:FindFirstChild("HumanoidRootPart") then continue end

                local unitName = unit.Name
                local level = unitLevels[unitName] or 1

                local nextCost = nil
                if level == 1 then nextCost = 250
                elseif level == 2 then nextCost = 400
                elseif level == 3 then nextCost = 650
                elseif level == 4 then nextCost = 900
                end

                if nextCost and currentMoney >= nextCost then
                    table.insert(upgradableUnits, {
                        unit = unit,
                        name = unitName,
                        level = level,
                        cost = nextCost
                    })
                end
            end

            table.sort(upgradableUnits, function(a, b)
                return a.level < b.level
            end)

            for _, data in ipairs(upgradableUnits) do
                local needed = data.cost
                while currentMoney < needed do
                    print(`‚è≥ –ñ–¥—ë–º –¥–µ–Ω–µ–≥ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞ {data.name} (—É—Ä–æ–≤–µ–Ω—å {data.level} ‚Üí {data.level+1}, –Ω—É–∂–Ω–æ: {needed}, –µ—Å—Ç—å: {currentMoney})`)
                    task.wait(2)
                    currentMoney = getPlayerMoney()
                end

                print(`üîß –ê–ø–≥—Ä–µ–π–¥–∏–º {data.name}: —É—Ä–æ–≤–µ–Ω—å {data.level} ‚Üí {data.level+1} –∑–∞ {needed}¬•`)
                local unitEvent = game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("UnitEvent")
                unitEvent:FireServer("Upgrade", data.name)
                task.wait(0.5)

                unitLevels[data.name] = data.level + 1

                local hrp = data.unit:FindFirstChild("HumanoidRootPart")
                if hrp then
                    moveToPosition(hrp.Position)
                    task.wait(0.5)
                end

                break
            end
        end

        -- üåê –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞ –≤ Discord
        local function sendMatchResult()
            local endScreen = player.PlayerGui:FindFirstChild("EndScreen")
            if not endScreen then return end

            local holder = endScreen:FindFirstChild("Holder")
            if not holder then return end

            local main = holder:FindFirstChild("Main")
            if not main then return end

            local stageStats = main:FindFirstChild("StageStatistics")
            if not stageStats then return end

            local playTime = stageStats:FindFirstChild("PlayTime")
            local timeText = playTime and playTime.Amount.Text or "0:00"

            local inventoryTemplate = main:FindFirstChild("InventoryTemplate")
            if not inventoryTemplate then return end

            local rewards = {}
            for _, reward in pairs(inventoryTemplate:GetChildren()) do
                if reward:IsA("Frame") and reward.Name ~= "BuyMoreSpace" then
                    local nameLabel = reward:FindFirstChild("Name")
                    local amountLabel = reward:FindFirstChild("Amount")
                    if nameLabel and amountLabel then
                        table.insert(rewards, {
                            name = nameLabel.Text,
                            amount = tonumber(amountLabel.Text) or 0
                        })
                    end
                end
            end

            -- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞
            local levelText = player.PlayerGui.Hotbar.Main.Level.Level.Text
            local embed = {
                title = "Anime Vanguards",
                fields = {
                    { name = "Name", value = `[${levelText}] ${player.Name}`, inline = false },
                    { name = "Result", value = `Planet Namak (Act1 Normal) - Finished\n- Time: ${timeText}\n- Reward:`, inline = false }
                },
                color = 5814783,
                timestamp = DateTime.now():ToIsoDate()
            }

            for _, r in pairs(rewards) do
                table.insert(embed.fields, { name = "", value = `+${r.amount} ${r.name}`, inline = false })
            end

            local data = { embeds = { embed } }
            local request = request or http_request or http.request
            local body = game:GetService("HttpService"):JSONEncode(data)
            pcall(function()
                request({
                    Url = getgenv().AV_WEBHOOK_URL,
                    Method = "POST",
                    Headers = { ["Content-Type"] = "application/json" },
                    Body = body
                })
            end)
        end

        -- üîÅ –¶–ò–ö–õ–´

        -- –ê–ø–≥—Ä–µ–π–¥
        coroutine.wrap(function()
            while getgenv().AutoUpgradeEnabled do
                if isGameActive() then
                    upgradeCheapestUnit()
                end
                task.wait(1.0, 1.8)
            end
        end)()

        -- –†–µ—Å—Ç–∞—Ä—Ç + –≤–µ–±—Ö—É–∫
        coroutine.wrap(function()
            while getgenv().MatchRestartEnabled do
                local endScreen = player.PlayerGui:FindFirstChild("EndScreen")
                if endScreen and endScreen.Enabled then
                    print("üîö –ú–∞—Ç—á –∑–∞–≤–µ—Ä—à—ë–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")

                    pcall(function()
                        game.ReplicatedStorage:WaitForChild("Networking"):WaitForChild("EndScreen"):WaitForChild("VoteEvent"):FireServer("Retry")
                        print("üó≥Ô∏è –ì–æ–ª–æ—Å—É–µ–º –∑–∞ —Ä–µ–ø–ª–µ–π")
                    end)

                    randomDelay(3, 5)
                    fireSkipWaveEvent()
                    randomDelay(8, 12)
                    waitForWaveStart()
                    deployAllUnits()

                    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–µ–±—Ö—É–∫
                    task.delay(1, sendMatchResult)
                end
                task.wait(2)
            end
        end)()

        -- üöÄ –°–¢–ê–†–¢
        print("üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –≤ –±–æ—ë–≤–∫–µ...")
        fireSkipWaveEvent()
        waitForWaveStart()
        deployAllUnits()

        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")

    else
        warn("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∏–≥—Ä–∞:", placeId)
        return
    end
end

-- üõ°Ô∏è –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
pcall(function()
    randomDelay(0.5, 1.5)
    main()
end)

-- üõë –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
function stopScript()
    getgenv().AutoUpgradeEnabled = false
    getgenv().MatchRestartEnabled = false
    print("üõë –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
end

print("üü¢ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π stopScript(), —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.")